{"version":3,"sources":["logo.svg","Imager.js","Mapper.js","ModalImager.js","Searchbox.js","App.js","serviceWorker.js","index.js","loading.svg"],"names":["module","exports","__webpack_require__","p","Imager","props","ldLogo","react_default","a","createElement","src","loading","className","alt","umd_default","url","loader","name","classname","onClick","onclick","id","data-lct","lct","Mapper","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","imgArr","_this2","fetch","concat","srch","then","data","json","setState","results","imgData","map","item","src_Imager","key","user","location","urls","regular","React","Component","ModalImager","style","fontWeight","Searchbox","tail","display2","handleKeyDown","bind","assertThisInitialized","clikr","e","keyCode","val","document","getElementById","value","display","event","modal","sht","currentTarget","getAttribute","shu","dscr","muffler","describe","window","reload","type","placeholder","onKeyDown","src_Mapper","src_ModalImager","reloader","App","logo","src_Searchbox","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3737813.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport Img from 'react-image'\r\nimport loading from './loading.svg'\r\n\r\nfunction Imager(props){\r\n\tconst ldLogo = <img src={loading} className=\"ld-logo\" alt=\"logo\" />\r\n\t\r\n\treturn(\r\n\t\t<div className=\"img-holder\">\r\n\t\t\t<Img src ={props.url} loader={ldLogo} alt={props.name} className={props.classname} onClick={props.onclick} id={props.id} data-lct={props.lct}/>\r\n\t\t\t<p className=\"img-p\">{props.name}<br/>{props.lct}</p>\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Imager","import React from 'react'\r\nimport Imager from './Imager'\r\n\r\nclass Mapper extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\timgArr: []\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tfetch (`https://api.unsplash.com/search/photos?page=1&per_page=7&query=${this.props.srch}&client_id=83f0f0fa318af26ee1c0724605f47bd4e77733935726b2b489331935cb8f3eb7`)\r\n\t\t\t.then(data => data.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\timgArr: data.results\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\tlet imgData = this.state.imgArr.map(item => <Imager\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={item.user.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlct={item.user.location}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\turl={item.urls.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassname=\"imgs\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonclick={this.props.onclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\r\n\t\treturn(\r\n\t\t\t<div className=\"imgs-container\">\r\n\t\t\t\t{imgData}\r\n\t\t \t</div>\r\n\t\t)\r\n\t\r\n\t}\r\n}\r\n\r\nexport default Mapper","import React from 'react'\r\nimport Img from 'react-image'\r\nimport loading from './loading.svg'\r\n\r\nfunction ModalImager(props){\r\n\tconst ldLogo = <img src={loading} className=\"App-logo\" alt=\"logo\" />\r\n\tconst styles = {\r\n\t\tfontWeight: 700\t\r\n\t}\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Img src ={props.url} loader={ldLogo} className={props.classname} />\r\n\t\t\t<p className=\"mdl-p\"><span style={styles}>{props.name}</span><br/>{props.location}</p>\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ModalImager","import React from 'react'\r\nimport Mapper from './Mapper'\r\nimport ModalImager from './ModalImager'\r\n\r\nclass Searchbox extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\ttail: 'African',\r\n\t\t\tdisplay2: 'none'\r\n\t\t}\r\n\t\t\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this)\r\n\t\tthis.clikr = this.clikr.bind(this)\r\n\t}\r\n\thandleKeyDown(e){\r\n\t\tif(e.keyCode === 13){\r\n\t\tlet val = document.getElementById('inpt')\r\n\t\tthis.setState({tail: val.value})\r\n\t\tthis.setState({display: \"none\"})\r\n\t\tthis.setState({display2: \"block\"})\r\n\t\t}\r\n\t}\r\n\tclikr(event){\r\n\t\tlet modal = document.getElementById(\"myModal\")\r\n\t\tlet sht = event.currentTarget.getAttribute(\"src\")\r\n\t\tlet shu = event.currentTarget.getAttribute(\"data-lct\")\r\n\t\tlet dscr = event.currentTarget.getAttribute(\"alt\")\r\n\t\tmodal.style.display = \"block\" \r\n\t\tthis.setState({muffler: sht})\r\n\t\tthis.setState({describe: dscr})\r\n\t\tthis.setState({location: shu})\r\n\t}\r\n\treloader(){\r\n\t\twindow.location.reload()\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tlet spanX = () => { \r\n\t\t\t\tlet modal = document.getElementById(\"myModal\")\r\n  \t\t\t\tmodal.style.display = \"none\"\r\n\t\t\t\t}\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"searchbox-div\">\r\n\t\t\t\t<input id=\"inpt\" type=\"text\" className=\"input-search\" placeholder=\"Search for a photo\" onKeyDown={this.handleKeyDown} style={{display:`${this.state.display}`}}/>\r\n\t\t\t\t\r\n\t\t\t\t<p style={{display:`${this.state.display2}`}}>Search results for <span>\"{this.state.tail}\"</span></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<Mapper \r\n\t\t\t\t\t\tsrch={this.state.tail}\r\n\t\t\t\t\t\tonclick={this.clikr}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<div id=\"myModal\" className=\"modal\">\r\n\t\t\t\t\t\t<span className=\"close\" onClick={spanX}>&times;</span>\r\n\t\t\t\t\t\t<ModalImager \r\n\t\t\t\t\t\t\t\turl = {this.state.muffler}\r\n\t\t\t\t\t\t\t\tclassname = \"modal-content\"\r\n\t\t\t\t\t\t\t\tid = \"modal-img\"\r\n\t\t\t\t\t\t\t\tname = {this.state.describe}\r\n\t\t\t\t\t\t\t\tlocation ={this.state.location}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\r\n\t\t\t\t\t\t<div className=\"caption\"><p>{this.state.dscr}</p></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"reloader\" onClick={this.reloader}>\r\n\t\t\t\t\t<p>Search Again</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Searchbox","import React from 'react';\r\nimport Searchbox from './Searchbox'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Search Photos\r\n        </p>\r\n      </header>\r\n\t  \r\n\t  <Searchbox />\r\n\t  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.afa9bc31.svg\";"],"sourceRoot":""}